{
    "description": "<p>Write a program that implements matrix addition and multiplication of two matrices.</p>",
    "inputFormat": "The input contains three parts. The first and second part represent the information of the first matrix and the second matrix respectively. The first line of each part contains row and column number of the matrix, and the following line is an array of integers which represent the matrix itself. The second part is a character which represents the operation of the matrix.",
    "outputFormat": "The content of the result matrix. Each element is followed by a space character.",
    "level": "Easy",
    "chapter": {
        "type": "Homework",
        "index": "Lec11"
    },
    "tags": [
        "Loop",
        "Array",
        "Pointers",
        "Struct"
    ],
    "timeLimit": 1,
    "memLimit": 10000,
    "coinReward": 0,
    "loaderCode": "#include <stdio.h>\n#define SIZE 50\n\nstruct mat {\n    int row;\n    int col;\n    int value[SIZE][SIZE];\n};\n\nvoid scan_mat(struct mat *);\nvoid print_mat(const struct mat *);\nvoid add_mat(const struct mat *, const struct mat *, struct mat *);\nvoid mul_mat(const struct mat *, const struct mat *, struct mat *);\n\nint main(void) {\n    struct mat m1, m2, result;\n    char op;\n    scan_mat(&m1);\n    scanf(\" %c\", &op);\n    scan_mat(&m2);\n    switch (op) {\n        case '+':\n            add_mat(&m1, &m2, &result);\n            break;\n        case '*':\n            mul_mat(&m1, &m2, &result);\n            break;\n    }\n    print_mat(&result);\n    return 0;\n}\n\nvoid scan_mat(struct mat *m_p) {\n    scanf(\"%d %d\", &m_p->row, &m_p->col);\n    for (int i = 0; i < m_p->row; ++i) {\n        for (int j = 0; j < m_p->col; ++j) {\n            scanf(\"%d\", &m_p->value[i][j]);\n        }\n    }\n}\n\nvoid print_mat(const struct mat *m_p){\n    for (int i = 0; i < m_p->row; ++i) {\n        for (int j = 0; j < m_p->col; ++j) {\n            printf(\"%d \", m_p->value[i][j]);\n            if (j == m_p->col - 1) {\n                printf(\"\\n\");\n            }\n        }\n    }\n}",
    "templateCode": "void add_mat(const struct mat *m1_p, const struct mat *m2_p, struct mat *result_p) { // matrix addition\r\n}\r\n\r\nvoid mul_mat(const struct mat *m1_p, const struct mat *m2_p, struct mat *result_p) { // matrix multiplication\r\n}",
    "title": "Matrix Addition and Multiplication",
    "date": "2020-12-22T16:37:57.667Z",
    "hint": "",
    "samples": [
        {
            "inputData": "2 3\n3 2 6\n2 4 5\n+\n2 3\n4 5 6\n3 1 4\n",
            "outputData": "7 7 12 \n5 5 9 \n"
        },
        {
            "inputData": "2 2\n1 2\n3 4\n*\n2 2\n5 6\n7 8\n",
            "outputData": "19 22 \n43 50 \n"
        }
    ],
    "id": "5N-_kWCwd6MM"
}
{
    "review": "<h2>6.1 Defining and Calling Functions</h2><ul><li><p>A <strong>function</strong> is a series of statements that have <strong>been grouped together</strong> and <strong>given a name</strong>.</p></li><li><p>Advantages of using functions:</p><ul><li><p>The code will be easier to read</p></li><li><p>Duplicating code can be avoided</p></li><li><p>Same logic can be reused</p></li></ul></li></ul><h3>Function Definitions</h3><ul><li><p>General form of a function definition:</p><pre><code>return-type function-name ( parameters ) {\n    declarations\n    statements\n}\n</code></pre></li><li><p><code>return-type</code> specifies the data type of the return value of the function.</p><ul><li><p>Use <code>return</code> keyword inside the function body to return a value</p></li><li><p>Returning array is not allowed</p></li><li><p>If you got nothing to return, set the return type to <code>void</code></p></li></ul></li><li><p><code>parameters</code> specifies <strong>a list of parameters</strong> the function takes.</p><ul><li><p>Each parameter is preceded by its data type</p></li><li><p>Parameters are separated by commas</p></li><li><p>If you don’t need parameter for a function, put <code>void</code> between the parentheses or leave it empty.</p></li></ul></li><li><p>Inside the curly brackets is known as the <strong>body</strong> of a function.</p><ul><li><p>The body of a function includes both declarations and statements</p></li><li><p>Variables declared inside function cannot be used by other function (See 6.4 to learn more about “scope”)</p></li><li><p>If the return type of a function is void, the body of this function can be empty</p></li></ul></li></ul><h3>Function Calls</h3><ul><li><p>A function call consists of a function name followed by a list of arguments, enclosed in parantheses:</p><pre><code>// Definition of function `add`\nint add (int a, int b) {\n    return a + b;\n}\n\n// Function call of `add` and discard its return value\nadd(3, 5);\n</code></pre><pre><code>// Definition of function `return_3`\nint return_3(){\n    return 3;\n}\n\n// Function call of `return_3` and store the return value to a variable\nint a = return_3();\n</code></pre><ul><li><p>If the parentheses are missing the function won’t be called (though the syntax is legal)</p></li><li><p>The value returned by a non-void function can always be discarded if it’s not needed</p></li></ul></li></ul><h3>Function Declarations</h3><ul><li><p><strong>Either a declaration or a definition of a function must be present prior to any call of the function.</strong></p></li><li><p><strong>Function declaration</strong> is used to specify the prototype of a function that will be implement (define) later.</p></li><li><p>The Gerneral form of a function declaration:</p><pre><code>return-type function-name ( parameters );\n</code></pre><ul><li><p>The function declaration must be consistent with the function’s definition</p></li><li><p>The parameter names are not needed to be speficied</p></li><li><p>Remember to put a semicolon at the end of the function definition</p></li></ul></li></ul><h2>6.2 Arguments</h2><h3>Pass by value</h3><ul><li><p>The variables or the expressions passed into a function are called “arguments”.</p></li><li><p>In C, arguments are <strong>passed by value</strong>.</p><ul><li><p>When a function is called, each argument is evaluated and the value is assigned to the corresponding parameter</p></li><li><p>The parameters hold a copy of the value the arguments</p></li><li><p>Any change made to the parameter don’t affect the value of the argument.</p><pre><code>void func(int a){\n    a = 5;\n}\n\nint b = 10;\nfunc(b);\n// b stay 10 after the function call</code></pre></li></ul></li></ul>",
    "videoUrl": "https://www.youtube.com/embed/ktN3RiOnp-E,https://www.youtube.com/embed/JobY5UFVr94",
    "makeUpTime": "2022-11-02T16:00:00.000Z",
    "notification": {
        "makeUpTime": "X38DDLMcbWiypW08rJjy"
    },
    "startTime": "2022-10-19T16:00:00.000Z",
    "dueTime": "2022-11-09T16:00:00.000Z",
    "sections": [],
    "type": "Homework",
    "index": "Lec06",
    "title": "Function and Scope"
}
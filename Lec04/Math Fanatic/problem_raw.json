{
    "description": "<p>Dot is a math fanatic and today he wants to observe the relationship between addition and factorization.</p><p>點點是個數學狂熱分子，今天他想要觀察加法與因數的關係。</p><p></p><p>Today there is a sequence S containing N positive integers. If the i-th item of the prefix sum can be divided by S<em>i, then output the i-th item of the prefix sum with S</em>i. If there are more than one set, please output them in the input order. (1&lt;=i&lt;=N)</p><p>今天有包含 N 個正整數的序列 S，如果前綴和的第 i 項能夠被 S<em>i 整除，則將前綴和的第 i 項與 S</em>i 輸出，若有多組符合，請依照輸入順序輸出。(1&lt;=i&lt;=N)</p><p></p><p></p><p>#前綴和(Prefix Sum):</p><p><a href=\"https://en.wikipedia.org/wiki/Prefix_sum\" rel=\"noopener noreferrer nofollow\">https://en.wikipedia.org/wiki/Prefix_sum</a></p><p>ex.</p><p>S = {1, 3, 7};</p><p>前綴和(Prefix Sum) = {1, 4, 11};</p><p></p><p>可以觀察的到一定會有一組解，因為前綴和第1項與原序列第1項相同，就代表一定會整除。</p><p>It can be observed that there must be a solution because the first term of the prefix sum is the same as the first term of the original sequence, which means it must be divisible.</p>",
    "inputFormat": "第一行有一個正整數 N（1 ≦ N ≦ 10^5），代表序列 S 有幾個整數。\r\n第二行有 N 個正整數 S_1、S_2...S_N，代表序列 S 的元素。（對所有 1 ≦ i ≦ N，1 ≦ S_i ≦ 10^9）\r\n\r\nThe first line has a positive integer N (1 ≦ N ≦ 10^5), representing the sequence S with several integers.\r\nThe second line has N positive integers S_1, S_2.... S_N, representing the elements of the sequence S. (for all 1 ≦ i ≦ N, 1 ≦ S_i ≦ 10^9)",
    "outputFormat": "對於符合條件的元素輸出該項前綴和與該元素並以空白隔開。\r\n各個符合條件的元素輸出以換行隔開，若有多組，請依照輸入順序輸出。\r\n\r\nFor the elements that meet the condition, output the prefix and the element separated by a space.\r\nOutput each eligible element separated by a new line, if there are multiple groups, please output them in the order of input.",
    "level": "Medium",
    "chapter": {
        "type": "Homework",
        "index": "Lec04"
    },
    "tags": [
        "Basic Types"
    ],
    "hint": "請注意變數型態的可用範圍",
    "timeLimit": 1,
    "memLimit": 5000,
    "coinReward": 0,
    "loaderCode": "",
    "templateCode": "#include<stdio.h>\r\n\r\nint main () {\r\n    return 0;\r\n}\r\n",
    "title": "Math Fanatic",
    "date": "2022-09-24T22:33:44.858Z",
    "samples": [
        {
            "inputData": "5\n1 3 2 6 7",
            "outputData": "1 1\n6 2\n12 6"
        },
        {
            "inputData": "10\n123 234 345 456 567 678 89 3 123 17",
            "outputData": "123 123\n2492 89\n2635 17"
        }
    ],
    "id": "dmdbJ0VMTU6E"
}